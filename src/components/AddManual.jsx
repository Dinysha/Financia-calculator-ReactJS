// TODO:
// [] –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –≤—ã–≤–æ–¥–∏—Ç—å –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É
// [] –æ—á–∏—â–∞—Ç—å –∏–Ω–ø—É—Ç—ã
// [+] —Å–µ–ª–µ–∫—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
// [+] –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
// [+] –∏–Ω–ø—É—Ç

import { Drawer, FloatButton, Form, Input, Select, Button, message } from 'antd'
import { QuestionCircleOutlined } from '@ant-design/icons'
import { useState } from 'react'

const feedback = [
  { value: '–ü–æ—Ö–≤–∞–ª–∏—Ç—å üòå' },
  { value: '–ü–æ—Ä—É–≥–∞—Ç—å üò∞' },
  { value: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è ü§™' },
  { value: '–ü—Ä–æ–±–ª–µ–º—ã üëÄ' },
  { value: '–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å–≤–æ üí∏' },
]

export default function AddManual({}) {
  const [open, setOpen] = useState(false)
  const [messageApi, contextHolder] = message.useMessage()

  const success = () => {
    messageApi.open({
      type: 'success',
      content: '–£—Å–ø–µ—à–Ω–æ!',
      duration: 1,
    })
  }

  const { TextArea } = Input
  const showDrawer = () => {
    setOpen(true)
  }
  const onClose = () => {
    setOpen(false)
  }

  return (
    <>
      {contextHolder}
      <FloatButton
        icon={<QuestionCircleOutlined />}
        type="default"
        style={{
          right: 94,
        }}
        onClick={showDrawer}
      />
      <Drawer title="–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å" onClose={onClose} open={open}>
        <h2
          style={{
            color: 'black',
            margin: '0px 0px 10px 0px',
            lineHeight: '1.8',
          }}
        >
          –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã?
          <br />
          –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º!üòá
        </h2>
        <Form>
          <Form.Item>
            <Select
              defaultValue="–ü–æ—Ö–≤–∞–ª–∏—Ç—å üòå"
              style={{
                width: 330,
              }}
              options={feedback}
            />
          </Form.Item>
          <Form.Item>
            <TextArea
              rows={4}
              placeholder="–í–∞—à–∏ –¥–æ–±—Ä—ã–µ / –≥–Ω–µ–≤–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
            />
          </Form.Item>
          <Form.Item>
            <Button onClick={success} type="primary">
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å üíå
            </Button>
          </Form.Item>
        </Form>
      </Drawer>
    </>
  )
}
